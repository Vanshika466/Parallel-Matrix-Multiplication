#include <iostream>
#include <vector>
#include <random>
#include <chrono>
#include <fstream>

// Function to generate a random matrix of size N x N
std::vector<std::vector<int>> generateRandomMatrix(int N) {
    std::vector<std::vector<int>> matrix(N, std::vector<int>(N));
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dis(1, 100);
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            matrix[i][j] = dis(gen);
        }
    }
    return matrix;
}

// Function to multiply two matrices
std::vector<std::vector<int>> multiplyMatrices(const std::vector<std::vector<int>>& A, 
                                              const std::vector<std::vector<int>>& B) {
    int N = A.size();
    std::vector<std::vector<int>> C(N, std::vector<int>(N, 0));
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            for (int k = 0; k < N; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
    return C;
}

// Function to write matrix to file
void writeMatrixToFile(const std::vector<std::vector<int>>& matrix, const std::string& filename) {
    std::ofstream outFile(filename);
    if (!outFile) {
        std::cerr << "Error opening file: " << filename << std::endl;
        return;
    }
    
    int N = matrix.size();
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            outFile << matrix[i][j] << " ";
        }
        outFile << "\n";
    }
    outFile.close();
}

int main() {
    // Matrix size
    int N = 1000;
    
    // Generate random matrices
    std::vector<std::vector<int>> A = generateRandomMatrix(N);
    std::vector<std::vector<int>> B = generateRandomMatrix(N);
    
    // Measure execution time for matrix multiplication
    auto start = std::chrono::high_resolution_clock::now();
    
    std::vector<std::vector<int>> C = multiplyMatrices(A, B);
    
    auto end = std::chrono::high_resolution_clock::now();
    std::chrono::duration<double> duration = end - start;
    
    std::cout << "Matrix multiplication of size " << N << "x" << N 
              << " completed in " << duration.count() << " seconds." << std::endl;
    
    // Write result to file
    writeMatrixToFile(C, "sequential_result.txt");
    
    return 0;
}
